<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
        <!ENTITY % sgml.features "IGNORE">
        <!ENTITY % xml.features "INCLUDE">
        <!ENTITY % BOOK_ENTS SYSTEM "PublicanCreators.ent">
        %BOOK_ENTS;
        <!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "/usr/share/xml/docbook/schema/dtd/4.5/dbcentx.mod">
        %DOCBOOK_ENTS;
        ]>
<?xml-model href="/usr/share/xml/docbook/schema/rng/5.0/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<chapter version="5.0" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <title>Using PublicanCreators</title>
  </info>
  <indexterm>
    <primary>Using PublicanCreators</primary>
  </indexterm>
  <section>
    <info>
      <title>Launching PublicanCreators</title>
    </info>
    <indexterm>
      <primary>Using PublicanCreators</primary>
      <secondary>Launching PublicanCreators</secondary>
    </indexterm>
    <para>For launching PublicanCreators you have to click on your
      <menuchoice>
        <guimenu>Program Launcher</guimenu>
        <guisubmenu>PublicanCreators</guisubmenu>
      </menuchoice>
      .
    </para>
    <para>Now you see a graphical interface (the look and feel depends on your chosen theme):</para>
    <para>
      <inlinemediaobject>
        <imageobject>
          <imagedata fileref="images/PublicanCreators.png" width="80%"/>
        </imageobject>
      </inlinemediaobject>
    </para>
    <para>Now you can choose one of that options:
      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Environment</emphasis>: Work or Private
          </para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Type</emphasis>: Article or Book
          </para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Optional</emphasis>: Normal, Report, Homework
          </para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Title</emphasis>:<emphasis>Your Title</emphasis>. You can use
            a normal entry with blanks, or you can use underscores instead of blanks (Version:
            0.4.2.0). But don't use umlauts like "Ä", "Ö", "Ü" or "ß" because Publican just
            understand ASCII chars. </para>
          <para>
            <tip>
              <para>You can use the publican.cfg to fix this. If your document is named "Sören und
                die Ägäis" you can type as title "Soren und die Agais". After the documentation
                creation is finished, you can add to the publican.cfg
                <screen>docname: Soren_und_die_Agais</screen>
              </para>
              <para>The chosen name should be the same as your root document. The root document of
                the example would be named: <filename>Soren_und_die_Agais.xml</filename>. Then you
                can change the title in the <filename>Article_Info.xml</filename> or
                  <filename>Book_Info.xml</filename> to your needs like <quote>Sören und die
                  Ägäis</quote>. Also it's possible to use <quote>AE</quote> instead of
                  <quote>'Ä</quote> and so on.</para>
            </tip>
          </para>
        </listitem>
      </itemizedlist>
    </para>
    <para>After clicking on
      <guibutton>Go!</guibutton>
      the documentation will be created by
      publican.
    </para>
    <section>
      <info>
        <title>What it does?</title>
      </info>
      <orderedlist>
        <listitem>
          <para>It runs the method <quote>oldconfig</quote> to check if a users configuration file
            is available. If not, it will break and suggest to run <quote>rake setup</quote>.</para>
        </listitem>
        <listitem>
          <para>The PublicanCreatorsGet.config method will be launched. The method returns a array
            which will splitted into the used variables.</para>
        </listitem>
        <listitem>
          <para>The PublicanCreatorsGet.title will be launched. This method returns a array which
            will be splitted into the variables <quote>environment</quote>, <quote>type</quote>,
              <quote>opt</quote> and <quote>title</quote>.  The <quote>environment</quote> reflects
            the situation private or work. <quote>type</quote> will be article or book.
              <quote>opt</quote> can be report, homework or just normal.</para>
        </listitem>
        <listitem>
          <para>The PublicanCreatorsPrepare.prepare will be launched. It will find out what target
            directory to be used. This depends on your configuration file and your given input from
            the previous method.</para>
        </listitem>
        <listitem>
          <para>Checker.check is a method who creates the targetdirectory if it doesn't
            exist.</para>
        </listitem>
        <listitem>
          <para>With the FileUtils.cd method it jumps into the new created directory.</para>
        </listitem>
        <listitem>
          <para>Now PublicanCreatorsChange.check_environment checks the environment and runs
            PublicanCreatorsChange.init_docu_work or PublicanCreatorsChange.init_docu_private for
            running <command>publican create</command> with all chosen flags.</para>
        </listitem>
        <listitem>
          <para>PublicanCreatorsChange.add_entity will work with your TITLE.ent file. If the
            environment <quote>Work</quote> is chosen, and the variable
              <quote>global_entities</quote> is filled, it will copy the whole content of the entity
            file to your new local entity file. The variable <quote>global_entities</quote> can set
            in your users configuration file.</para>
        </listitem>
        <listitem>
          <para>Next the method PublicanCreatorsChange.change_holder works with your entity file
            too. In case of private environment it will use your name as HOLDER. Otherwise it uses
            your companies name.</para>
        </listitem>
        <listitem>
          <para>Sometimes its useful to do not use the given legal notice (In case of small
            documents or reports). If you are in environment <quote>Work</quote> and has chosen
              <quote>Article</quote> and has set <quote>legal = true</quote> in your configuration
            file it (PublicanCreatorsChange.remove_legal) will remove the legal notice.</para>
        </listitem>
        <listitem>
          <para>Per default Publican adds some Docbook lines for including a title logo. If you are
            already defined a Title Logo in your XSL-Stylesheets then you can set <quote>title_logo
              = false</quote>. Then the method PublicanCreatorsChange.remove_orgname removes the
            predefined title logo from the Article_Info.xml or Book_Info.xml from your
            project.</para>
        </listitem>
        <listitem>
          <para>Next step is PublicanCreatorsChange.fix_revhist. In all environments it will use the
            firstname and surname of the user and replaces them with the default entries in
            Revision_History.xml. In case of using in environment <quote>Work</quote> it will use
            your work email address for replacing the default. Otherwise it uses your private
            address.</para>
        </listitem>
        <listitem>
          <para>Now the method PublicanCreatorsChange.fix_authorgroup does similar the previous
            method just for the Author_Group.xml file. In addition it can set the company_name and
            company_division if chosen.</para>
        </listitem>
        <listitem>
          <para>The last method PublicanCreatorsExport.export_buildscript generates a buildscript
            for your project.</para>
        </listitem>
      </orderedlist>
    </section>
  </section>

  <section>
    <info>
      <title>Add a revision</title>
    </info>
    <indexterm>
      <primary>Using PublicanCreators</primary>
      <secondary>Add a revision</secondary>
    </indexterm>
    <para>PublicanCreators also ships a graphical revision adder. Just click
      <menuchoice>
        <guimenu>program-launcher</guimenu>
        <guisubmenu>PublicanCreatorsRevision</guisubmenu>
      </menuchoice>
      .
    </para>
    <para>Now you see a graphical interface (the look and feel depends on your chosen
      theme):
    </para>
    <para>
      <inlinemediaobject>
        <imageobject>
          <imagedata fileref="images/RevisionCreator.png"/>
        </imageobject>
      </inlinemediaobject>
    </para>
    <para>There you have three important tweaks:</para>
    <para>
      <itemizedlist>
        <listitem>
          <para><emphasis role="bold">Projectdir</emphasis>: Use that to move to your
            <emphasis>target directory</emphasis>
            (That directory where your projects publican.cfg
            is)
          </para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Commits</emphasis>: There you can place one to five
            <emphasis>revision texts</emphasis>. If you need more than 5 regularly so file a bug
            report. You can use a normal entry with blanks, or you can use underscores instead of
            blanks (Version: 0.4.2.0). There you can use Umlauts.
          </para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Revision number</emphasis>: There you can place your
            <emphasis>revision number</emphasis>.
          </para>
        </listitem>
      </itemizedlist>
      <important>
        <para>From Version 0.4.4.0 PublicanCreators ships a new feature. The entered Revision number
          will be splitted internal. If you enter a number like <quote>0.4.1-0</quote> the program
          splits it into a revision number 0.4.1 and a edition number 0. So the productversion tag
          in Article_Info.xml or Book_Info.xml will be replaced with the revision number, and the
          edition field will become the edition value.</para>
      </important>
    </para>
  </section>
</chapter>
